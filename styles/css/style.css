*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;}@font-face{font-family:'OpenSansLight';src:url('../fonts/fonts/OpenSans-Light-webfont.eot');src:url('../fonts/fonts/OpenSans-Light-webfont.eot?#iefix') format('embedded-opentype'),url('../fonts/fonts/OpenSans-Light-webfont.woff') format('woff'),url('../fonts/fonts/OpenSans-Light-webfont.ttf') format('truetype'),url('../fonts/fonts/OpenSans-Light-webfont.svg#OpenSansLight') format('svg');font-weight:normal;font-style:normal;}@font-face{font-family:'OpenSansLightItalic';src:url('../fonts/fonts/OpenSans-LightItalic-webfont.eot');src:url('../fonts/fonts/OpenSans-LightItalic-webfont.eot?#iefix') format('embedded-opentype'),url('../fonts/fonts/OpenSans-LightItalic-webfont.woff') format('woff'),url('../fonts/fonts/OpenSans-LightItalic-webfont.ttf') format('truetype'),url('../fonts/fonts/OpenSans-LightItalic-webfont.svg#OpenSansLightItalic') format('svg');font-weight:normal;font-style:normal;}@font-face{font-family:'OpenSansRegular';src:url('../fonts/fonts/OpenSans-Regular-webfont.eot');src:url('../fonts/fonts/OpenSans-Regular-webfont.eot?#iefix') format('embedded-opentype'),url('../fonts/fonts/OpenSans-Regular-webfont.woff') format('woff'),url('../fonts/fonts/OpenSans-Regular-webfont.ttf') format('truetype'),url('../fonts/fonts/OpenSans-Regular-webfont.svg#OpenSansRegular') format('svg');font-weight:normal;font-style:normal;}@font-face{font-family:'OpenSansItalic';src:url('../fonts/fonts/OpenSans-Italic-webfont.eot');src:url('../fonts/fonts/OpenSans-Italic-webfont.eot?#iefix') format('embedded-opentype'),url('../fonts/fonts/OpenSans-Italic-webfont.woff') format('woff'),url('../fonts/fonts/OpenSans-Italic-webfont.ttf') format('truetype'),url('../fonts/fonts/OpenSans-Italic-webfont.svg#OpenSansItalic') format('svg');font-weight:normal;font-style:normal;}@font-face{font-family:'OpenSansSemibold';src:url('../fonts/fonts/OpenSans-Semibold-webfont.eot');src:url('../fonts/fonts/OpenSans-Semibold-webfont.eot?#iefix') format('embedded-opentype'),url('../fonts/fonts/OpenSans-Semibold-webfont.woff') format('woff'),url('../fonts/fonts/OpenSans-Semibold-webfont.ttf') format('truetype'),url('../fonts/fonts/OpenSans-Semibold-webfont.svg#OpenSansSemibold') format('svg');font-weight:normal;font-style:normal;}@font-face{font-family:'OpenSansSemiboldItalic';src:url('../fonts/fonts/OpenSans-SemiboldItalic-webfont.eot');src:url('../fonts/fonts/OpenSans-SemiboldItalic-webfont.eot?#iefix') format('embedded-opentype'),url('../fonts/fonts/OpenSans-SemiboldItalic-webfont.woff') format('woff'),url('../fonts/fonts/OpenSans-SemiboldItalic-webfont.ttf') format('truetype'),url('../fonts/fonts/OpenSans-SemiboldItalic-webfont.svg#OpenSansSemiboldItalic') format('svg');font-weight:normal;font-style:normal;}@font-face{font-family:'OpenSansBold';src:url('../fonts/fonts/OpenSans-Bold-webfont.eot');src:url('../fonts/fonts/OpenSans-Bold-webfont.eot?#iefix') format('embedded-opentype'),url('../fonts/fonts/OpenSans-Bold-webfont.woff') format('woff'),url('../fonts/fonts/OpenSans-Bold-webfont.ttf') format('truetype'),url('../fonts/fonts/OpenSans-Bold-webfont.svg#OpenSansBold') format('svg');font-weight:normal;font-style:normal;}@font-face{font-family:'icomoon';src:url('../fonts/fonts/icomoon.eot');src:url('../fonts/fonts/icomoon.eot') format('embedded-opentype'),url('../fonts/fonts/icomoon.woff') format('woff'),url('../fonts/fonts/icomoon.ttf') format('truetype'),url('../fonts/fonts/icomoon.svg') format('svg');font-weight:normal;font-style:normal;}[data-icon]:before{font-family:'icomoon';content:attr(data-icon);speak:none;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;}.icon_rainy,.icon_code,.icon_wrench,.icon_search,.icon_location,.icon_warning,.icon_umbrella,.icon_feed,.icon_twitter,.icon_android,.icon_road,.icon_airplane,.icon_accessibility,.icon_home,.icon_mobile,.icon_screen,.icon_lock,.icon_flag,.icon_hammer,.icon_aid,.icon_cogs,.icon_bubbles,.icon_user,.icon_phone,.icon_library,.icon_paste,.icon_plus,.icon_minus,.icon_checkmark,.icon_close,.icon_lab,.icon_cart,.icon_credit,.icon_location-2,.icon_compass,.icon_user-2,.icon_users,.icon_youtube,.icon_facebook,.icon_signup,.icon_h-sign,.icon_ambulance,.icon_comment,.icon_envelope-alt,.icon_html5,.icon_css3,.icon_file-xml,.icon_code-2,.icon_console,.icon_github,.icon_intersection,.icon_uniF488,.icon_uniF489,.icon_desklamp,.icon_thissideup,.icon_firefox,.icon_microwave,.icon_nintendods,.icon_apple,.icon_spaceinvaders,.icon_danger,.icon_oneup,.icon_reliability,.icon_email,.icon_html5-2,.icon_css3-2,.icon_jqueryui,.icon_wordpress,.icon_html,.icon_jquery,.icon_joomla,.icon_github-2,.icon_braces,.icon_chevrons,.icon_vinyl,.icon_chrome,.icon_linkedin,.icon_twitter-2,.icon_photoshop,.icon_illustrator,.icon_tent,.icon_roadsign,.icon_glasses,.icon_controllerps,.icon_github-sign,.icon_trophy,.icon_apple-2,.icon_windows,.icon_lastfm,.icon_IE,.icon_safari,.icon_opera,.icon_firefox-2,.icon_chrome-2,.icon_file-pdf,.icon_file-word,.icon_file-excel,.icon_hospital,.icon_bread,.icon_soccer,.icon_library-2,.icon_graduate,.icon_office,.icon_briefcase{font-family:'icomoon';speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;}.icon_rainy:before{content:"\21";}.icon_code:before{content:"\22";}.icon_wrench:before{content:"\23";}.icon_search:before{content:"\24";}.icon_location:before{content:"\25";}.icon_warning:before{content:"\26";}.icon_umbrella:before{content:"\27";}.icon_feed:before{content:"\28";}.icon_twitter:before{content:"\2a";}.icon_android:before{content:"\2b";}.icon_road:before{content:"\2c";}.icon_airplane:before{content:"\2d";}.icon_accessibility:before{content:"\2e";}.icon_home:before{content:"\2f";}.icon_mobile:before{content:"\30";}.icon_screen:before{content:"\31";}.icon_lock:before{content:"\32";}.icon_flag:before{content:"\33";}.icon_hammer:before{content:"\34";}.icon_aid:before{content:"\35";}.icon_cogs:before{content:"\36";}.icon_bubbles:before{content:"\37";}.icon_user:before{content:"\38";}.icon_phone:before{content:"\39";}.icon_library:before{content:"\3a";}.icon_paste:before{content:"\3b";}.icon_plus:before{content:"\3c";}.icon_minus:before{content:"\3d";}.icon_checkmark:before{content:"\3e";}.icon_close:before{content:"\3f";}.icon_lab:before{content:"\40";}.icon_cart:before{content:"\41";}.icon_credit:before{content:"\42";}.icon_location-2:before{content:"\43";}.icon_compass:before{content:"\44";}.icon_user-2:before{content:"\45";}.icon_users:before{content:"\46";}.icon_youtube:before{content:"\47";}.icon_facebook:before{content:"\49";}.icon_signup:before{content:"\29";}.icon_h-sign:before{content:"\f0fd";}.icon_ambulance:before{content:"\f0f9";}.icon_comment:before{content:"\f075";}.icon_envelope-alt:before{content:"\f0e0";}.icon_html5:before{content:"\e000";}.icon_css3:before{content:"\e001";}.icon_file-xml:before{content:"\e002";}.icon_code-2:before{content:"\e003";}.icon_console:before{content:"\e004";}.icon_github:before{content:"\e005";}.icon_intersection:before{content:"\2229";}.icon_uniF488:before{content:"\f488";}.icon_uniF489:before{content:"\f489";}.icon_desklamp:before{content:"\f412";}.icon_thissideup:before{content:"\f41d";}.icon_firefox:before{content:"\f420";}.icon_microwave:before{content:"\f42e";}.icon_nintendods:before{content:"\f404";}.icon_apple:before{content:"\f34e";}.icon_spaceinvaders:before{content:"\f352";}.icon_danger:before{content:"\f415";}.icon_oneup:before{content:"\f3b7";}.icon_reliability:before{content:"\f016";}.icon_email:before{content:"\f028";}.icon_html5-2:before{content:"\f069";}.icon_css3-2:before{content:"\f06a";}.icon_jqueryui:before{content:"\f06c";}.icon_wordpress:before{content:"\f074";}.icon_html:before{content:"\f068";}.icon_jquery:before{content:"\f06b";}.icon_joomla:before{content:"\f073";}.icon_github-2:before{content:"\f081";}.icon_braces:before{content:"\f0b4";}.icon_chevrons:before{content:"\f0b5";}.icon_vinyl:before{content:"\f0cc";}.icon_chrome:before{content:"\f14e";}.icon_linkedin:before{content:"\f166";}.icon_twitter-2:before{content:"\f16a";}.icon_photoshop:before{content:"\f1cd";}.icon_illustrator:before{content:"\f1ce";}.icon_tent:before{content:"\f215";}.icon_roadsign:before{content:"\f21b";}.icon_glasses:before{content:"\f295";}.icon_controllerps:before{content:"\f2d1";}.icon_github-sign:before{content:"\f092";}.icon_trophy:before{content:"\f091";}.icon_apple-2:before{content:"\e006";}.icon_windows:before{content:"\e008";}.icon_lastfm:before{content:"\e007";}.icon_IE:before{content:"\e009";}.icon_safari:before{content:"\e00a";}.icon_opera:before{content:"\e00b";}.icon_firefox-2:before{content:"\e00c";}.icon_chrome-2:before{content:"\e00d";}.icon_file-pdf:before{content:"\e00e";}.icon_file-word:before{content:"\e00f";}.icon_file-excel:before{content:"\e010";}.icon_hospital:before{content:"\f247";}.icon_bread:before{content:"\f42f";}.icon_soccer:before{content:"\e011";}.icon_library-2:before{content:"\e012";}.icon_graduate:before{content:"\e013";}.icon_office:before{content:"\e014";}.icon_briefcase:before{content:"\e015";}body{background:#fff;font-family:Arial;margin:0;}article{margin:0 auto;padding:30px 0;}h1{color:#656565;font-family:"OpenSansLight";font-size:5em;}header[role="banner"] h1{color:#656565;font-size:2em;line-height:1.16667em;margin-bottom:0;}h1 b{font-family:"OpenSansRegular";}h2{color:#23b27e;font-family:"OpenSansLight";font-size:3em;text-transform:uppercase;text-align:center;}h2 span{padding:0.5em;}h3{font-size:1.5em;}p{color:#656565;font-family:"OpenSansLight";}a{color:#23b27e;}header[role="banner"]{background:white;}header a{color:#23b27e;font-size:2em;padding:0 10px;text-decoration:none;transition:all 1s ease-in-out;webkit-transition:all 1s ease-in-out;}header nav{float:right;}header nav li{display:inline-block;}header a:hover{color:#656565;-webkit-transform:rotate(60deg);}header a:hover i{-webkit-transform:rotate(70deg);transform:rotate(70deg);}.top-bar{background:#fff;}.top-bar section{max-width:62.5em;}.top-bar-section ul{background:#fff;}.top-bar-section ul li>a{color:#23b27e;background:#fff;}.hero{margin-bottom:0;}#about{background:url(../img/ordi.jpg) 50% 0 repeat fixed;min-height:300px;background-size:cover;height:auto;margin:0 auto;width:100%;max-width:1920px;position:relative;}#about article{text-align:left;}#about li{color:#fff;padding:0.5em;}#home{background:url(../img/sublime.jpg) 50% 0 repeat fixed;background:url(../img/banniere.png) 50% 0 repeat fixed;min-height:300px;background-size:50%;height:300px;margin:0 auto;width:100%;max-width:1920px;position:relative;}#home article{height:200px;top:150px;}#exp{background:url(../img/bg1.jpg) 50% 0 repeat fixed;min-height:300px;background-size:cover;height:300px;margin:0 auto;width:100%;max-width:1920px;position:relative;}#exp article{height:200px;text-align:center;top:150px;color:#fff;}#exp i{color:#fff;}#divers{background:url(../img/banniere.png) 50% 0 repeat-x fixed;min-height:150px;height:150px;margin:0 auto;width:100%;max-width:1920px;position:relative;}#divers article{height:200px;text-align:center;top:150px;}.page h2,.page p{color:#fff;text-align:left;}#avatar{display:block;float:left;background-size:280px;width:200px;height:200px;background-image:url(../img/lomo.jpg);background-repeat:no-repeat;background-position:50% 50%;border-radius:100px;margin-bottom:20px;}.big_icons{text-align:center;}.big_icons li{cursor:pointer;}.big_icons li span{background:#f1f1f2;display:block;width:100%;height:100%;transition:all 1s;}.big_icons p{clear:both;display:block;margin-top:20px;}.big_icons span:hover i{color:#23b27e;}.big_icons i{width:33%;height:33%;font-size:4em;text-align:center;color:#b5b5b5;transition:all 1s;}.big_icons li:nth-child(2) span{color:#23b27e;}.big_icons li:nth-child(3) span{color:#23b27e;}li.plus span{background:none;font-size:4em;padding:0;line-height:2em;}li.plus span:hover{background:none;}ul li ul li{text-align:left;list-style:square;padding:5px;}.center{text-align:center;}.superbig{display:block;margin:0 auto;width:150px;height:150px;font-size:80px;color:#fff;text-align:center;padding:30px 0;display:block;background:#23b27e;border-radius:100px;}.square{padding:0;}.square li{padding:5px 0;line-height:1.3em;display:block;}.square li span{font-size:1.2em;color:#656565;}.square li .points{font-size:50px;margin-bottom:40px;}.lighter{background:#f1f1f2;}.button{border-radius:4px 4px 4px;box-shadow:0 8px #106949;}.button:hover{top:2px;box-shadow:0 6px #106949;}@media only screen and (max-width: 768px){#btn_CV{margin:65px 0 0 30px;}#home{background-size:100%;}#title{width:100%;text-align:center;margin:0;}#social{position:relative;width:100%;}#social ul{text-align:center;margin:10px 0;padding:0;}#social li{display:inline-block;}#social li a,#social li a i{font-size:1.2em;}}@media only screen and (max-width: 470px){#avatar{margin:0 auto;float:none;}#btn_CV{margin:10px auto;display:block;width:70%;}}.button{color:#fff;background:#23b27e;border:1px solid #1b8760;cursor:pointer;font-weight:bold;font-size:1em;line-height:1;margin:0 0 1.25em;position:relative;text-decoration:none;text-align:center;display:inline-block;padding:0.75em 1.5em 0.8125em 1.5em;}header article{max-width:68em;margin-left:auto;margin-right:auto;border-top-left-radius:5px;border-top-right-radius:5px;}header article:after{content:"";display:table;clear:both;}header article h1{float:left;display:block;margin-right:2.12766%;width:65.95745%;}header article h1:last-child{margin-right:0;}header article nav{float:left;display:block;margin-right:2.12766%;width:31.91489%;}header article nav:last-child{margin-right:0;}.row{max-width:68em;margin-left:auto;margin-right:auto;}.row:after{content:"";display:table;clear:both;}.span4{float:left;display:block;margin-right:2.12766%;width:31.91489%;}.span4:last-child{margin-right:0;}.span8{float:left;display:block;margin-right:2.12766%;width:65.95745%;}.span8:last-child{margin-right:0;}/*# sourceMappingURL=data:application/json;base64,*/